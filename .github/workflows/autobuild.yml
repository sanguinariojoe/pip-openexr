name: Wheels

on:
  push:
    branches: [ $default-branch, main ]

jobs:
  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v4
      if: github.event_name == 'push'

    - uses: dev-drprasad/delete-tag-and-release@v1.0.1
      continue-on-error: true
      with:
        delete_release: true
        tag_name: "nightly"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name == 'push'

    - uses: rickstaa/action-create-tag@v1
      id: create_tag
      with:
        tag: "nightly"
        message: "Latest release"
        force_push_tag: true
      if: github.event_name == 'push'

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "nightly"
        release_name: "nightly"
        draft: false
        prerelease: false
      if: github.event_name == 'push'

  build_wheels:
    name: Build Python wheels
    needs: [create_release]
    if: github.event_name == 'push'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macOS-latest]
    env:
      # Skip 32-bit wheels builds
      CIBW_SKIP: "*-win32 *_i686"
      CIBW_BEFORE_BUILD_LINUX: >
        echo "Installing Zlib..." &&
        cd zlib.build &&
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../openexr.install -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_PREFIX_PATH=../openexr.install -DCMAKE_INSTALL_LIBDIR=lib ../zlib &&
        cmake --build ./ --config Release --clean-first &&
        cmake --install ./ --config Release &&
        cd .. &&
        echo "Installing Imath-3.1.8..." &&
        cd imath.build &&
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../openexr.install -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_PREFIX_PATH=../openexr.install -DCMAKE_INSTALL_LIBDIR=lib -DBUILD_TESTING=OFF -DBUILD_SHARED_LIBS=OFF ../imath &&
        cmake --build ./ --config Release --clean-first &&
        cmake --install ./ --config Release &&
        cd .. &&
        echo "Installing OpenEXR-3.1.8..." &&
        cd openexr.build &&
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../openexr.install -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_PREFIX_PATH=../openexr.install -DCMAKE_INSTALL_LIBDIR=lib -DBUILD_TESTING=OFF -DBUILD_SHARED_LIBS=OFF -DOPENEXR_ENABLE_THREADING=OFF ../openexr &&
        cmake --build ./ --config Release --clean-first &&
        cmake --install ./ --config Release &&
        cd ..
      CIBW_BEFORE_BUILD_WINDOWS: >
        echo "Installing Zlib..." &&
        cd zlib.build &&
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../openexr.install -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_PREFIX_PATH=../openexr.install -DCMAKE_INSTALL_LIBDIR=lib ../zlib &&
        cmake --build ./ --config Release --clean-first &&
        cmake --install ./ --config Release &&
        cd .. &&
        echo "Installing Imath-3.1.8..." &&
        cd imath.build &&
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../openexr.install -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_PREFIX_PATH=../openexr.install -DCMAKE_INSTALL_LIBDIR=lib -DBUILD_TESTING=OFF -DBUILD_SHARED_LIBS=OFF ../imath &&
        cmake --build ./ --config Release --clean-first &&
        cmake --install ./ --config Release &&
        cd .. &&
        echo "Installing OpenEXR-3.1.8..." &&
        cd openexr.build &&
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../openexr.install -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_PREFIX_PATH=../openexr.install -DCMAKE_INSTALL_LIBDIR=lib -DBUILD_TESTING=OFF -DBUILD_SHARED_LIBS=OFF ../openexr &&
        cmake --build ./ --config Release --clean-first &&
        cmake --install ./ --config Release &&
        cd ..
      CIBW_BEFORE_BUILD_MACOS: >
        echo "Installing Zlib..." &&
        cd zlib.build &&
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../openexr.install -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_PREFIX_PATH=../openexr.install -DCMAKE_INSTALL_LIBDIR=lib ../zlib &&
        cmake --build ./ --config Release --clean-first &&
        cmake --install ./ --config Release &&
        cd .. &&
        echo "Installing Imath-3.1.8..." &&
        cd imath.build &&
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../openexr.install -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_PREFIX_PATH=../openexr.install -DCMAKE_INSTALL_LIBDIR=lib -DBUILD_TESTING=OFF -DBUILD_SHARED_LIBS=OFF ../imath &&
        cmake --build ./ --config Release --clean-first &&
        cmake --install ./ --config Release &&
        cd .. &&
        echo "Installing OpenEXR-3.1.8..." &&
        cd openexr.build &&
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../openexr.install -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_PREFIX_PATH=../openexr.install -DCMAKE_INSTALL_LIBDIR=lib -DBUILD_TESTING=OFF -DBUILD_SHARED_LIBS=OFF -DOPENEXR_ENABLE_THREADING=OFF ../openexr &&
        cmake --build ./ --config Release --clean-first &&
        cmake --install ./ --config Release &&
        cd ..

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v4
        with:
            python-version: '3.x'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.8.1

      - name: Create setup.py
        run: |
            rm ${{github.workspace}}/setup.py
            mv ${{github.workspace}}/.github.setup.py ${{github.workspace}}/setup.py

      - name: Create folders
        run: |
            mkdir -p ${{github.workspace}}/zlib.build
            mkdir -p ${{github.workspace}}/imath.build
            mkdir -p ${{github.workspace}}/openexr.build
            mkdir -p ${{github.workspace}}/openexr.install

      - name: download Zlib source code
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz
          target: ${{github.workspace}}/

      - name: Extract Zlib
        run: |
            tar -xvzf zlib-1.2.13.tar.gz -C ${{github.workspace}}/
            mv zlib-1.2.13 zlib
            rm zlib-1.2.13.tar.gz

      - name: download Imath source code
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://github.com/AcademySoftwareFoundation/Imath/archive/refs/tags/v3.1.8.tar.gz
          target: ${{github.workspace}}/

      - name: Extract Imath
        run: |
            tar -xvzf v3.1.8.tar.gz -C ${{github.workspace}}/
            mv Imath-3.1.8 imath
            rm v3.1.8.tar.gz

      - name: download OpenEXR source code
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://github.com/AcademySoftwareFoundation/openexr/archive/refs/tags/v3.1.8.tar.gz
          target: ${{github.workspace}}/

      - name: Extract OpenEXR
        run: |
            tar -xvzf v3.1.8.tar.gz -C ${{github.workspace}}/
            mv openexr-3.1.8 openexr
            rm v3.1.8.tar.gz

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          name: "Python wheels"
          path: ./wheelhouse/*.whl
